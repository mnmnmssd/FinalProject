<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog_system.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.blog_system.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="valid" jdbcType="BIT" property="valid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, email, created, valid,authority_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getAllUser" resultType="com.example.blog_system.entity.User">
    select * from t_user order by id asc
  </select>
  <select id="getUserId" resultType="java.lang.Integer">
    select id
    from t_user
    where username = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="delUserAuth">
    delete from t_user_authority
    where user_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.blog_system.entity.User">
    insert into t_user (id, username, password, 
      email, created, valid)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{created,jdbcType=DATE}, #{valid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.blog_system.entity.User">
    <selectKey keyProperty="id" order="AFTER"
               resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user(
            id, username, password, email, created, valid
    ) VALUES (
              #{id,jdbcType=INTEGER},
              #{username,jdbcType=VARCHAR},
              #{password,jdbcType=VARCHAR},
              #{email,jdbcType=VARCHAR},
              #{created,jdbcType=DATE},
              #{valid,jdbcType=INTEGER}
    )

  </insert>
  <insert id="addUserAuth">
    <selectKey keyProperty="id" order="AFTER"
               resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_authority(
                                 user_id, authority_id
    ) VALUES (
              #{id,jdbcType=INTEGER},
              #{auth,jdbcType=INTEGER}
    )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.blog_system.entity.User">
    update t_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=DATE},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.blog_system.entity.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      created = #{created,jdbcType=DATE},
      valid = #{valid,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateUserById">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateUserAuth">
    update t_user_authority
    set authority_id = #{auth,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>